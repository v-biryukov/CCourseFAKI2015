#include "image.h"

int main()
{

    // Считываем картинку, изменяем и сохраняем
    Image a;
    a.read("images/zlatoust.ppm");
    a.reverse_colors();
    a.flip_vertically();
    a.write("a.ppm");


    // Создаём свою картинку размера 1000 на 800 пикселей
    Image b(1000, 800);
    // Очищаем её цветом rgb(15, 77, 90)
    b.clear({15, 77, 90});
    // Рисуем окружность на этой картинке
    // радиус = 100, координаты центра = {400, 500}, цвет = {100, 50, 200}
    b.draw_circle(100, {400, 500}, {100, 50, 200});
    // Рисуем линию на этой картинке
    // Координаты от {100, 100} до {600, 700}  (ось y перевёрнута)
    b.draw_line({100, 100}, {600, 700}, {50, 200, 100});

    // Сохраняем картинку в файл
    b.write("b.ppm");
}



/*
    Задание:
    
    Класс Image умеет сохранять изображение в простом формате ppm

    Но мы захотели уметь сохранять файлы изображения в других форматах и, возможно, разными библиотеками

    Используйте паттерн Адаптор, чтобы удобно реализовать сохранение изображений в форматах ppm и jpeg
    с использование библиотек stb (папка stb) и libjpeg (папка jpeg-9e, сайт http://www.ijg.org/)
    Для этого создайте абстрактный класс ImageSaver
    и отнаследуйте от него классы 
    PpmSaver
    JpegSaver

    От класса JpegSaver отнаследуйте классы
    StbJpegSaver
    LjJpegSaver

*/