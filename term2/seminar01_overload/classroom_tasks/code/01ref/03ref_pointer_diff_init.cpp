/*
    Несмотря на то, что ссылки и указатели во многом похожи, у них есть и много больших отличий.
    (помимо разной инициализации и того, что ссылку не нужно постоянно разыменовывать)


    Различие 1) Указатель можно создать без инициализации 

        Можно написать вот так:

            int* p;

        В этом случае в p будет храниться произвольный адрес.
        Разыменовывать такой указатель, не задав его значение адресом какого-либо объекта, очень опасно, 
        это приведёт к ошибке - неопределённому поведению.

        Ссылку нельзя создать без инициализации, то есть такая строка будет ошибкой:

            int& r;

        При создании ссылки нужно указать на что она будет указывать


    Различие 2)  Указатель можно приравнять нулевому значению
    
        Указатель можно приравнять нулевому значению, равному nullptr.
        Разыменование такого нулевого указателя приведёт к ошибке.

        Ссылку же нельзя инициализировать никаким нулевым значением.
        То есть не существует никакой константы, которая бы обозначала нулевую ссылку.
*/

#include <iostream>
using std::cout, std::endl;

int main() 
{

}


/*
    Задачи:

    1)  Попробуйте создать:

        a)  Указатель без инициализации
        б)  Ссылку без инициализации

        в)  Указатель, равнуй нулевому значению nullptr
        г)  Ссылку, равную нулю
    
        Скомпилируется ли программа в этих 4-х случаях?
*/