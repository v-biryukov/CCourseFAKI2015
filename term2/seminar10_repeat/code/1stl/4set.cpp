#include <iostream>
#include <set>

using std::cout;
using std::endl;

int main()
{
    // Главное преемущество set по сравнению с vector:
    // Операции insert, find и другие намного быстрее
    // Недостаток -- нельзя обращаться по индексу
    std::set<int> s = {31, 31, 31, 4, -31, 31, 4, 8, 7};
    cout << "Size = " << s.size() << endl;

    // Добавьте в множество следующие элементы: 5, 10, 31
    // Используёте метод insert
    // Ваш код:

    // Напечатайте элементы множества с помощью цикла, используя итератор
    // Ваш код:


    // Напечатайте элементы множества с помощью range-based for цикла. При компиляции используёте опцию -std=c++11
    // Ваш код:


    // Удалите элемент 31 из вашего множества
    // Для этого нужно создать итератор и найти элемент равный 31 с помощью find()
    // Затем нужно использовать метод erase(<итератор>). Ваш код:


    // Используйте std::multiset вместо std::set в коде выше. В чем разница?
    

    // Используйте std::unordered_set вместо std::set в коде выше. В чем разница? 


    // Используйте std::unordered_multiset вместо std::set в коде выше. В чем разница?  
}