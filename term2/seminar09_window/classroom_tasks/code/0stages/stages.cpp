/*

    Этапы сборки:


    1)  Препроцессинг - Обрабатываются директивы компилятора #include, #define и другие. Удаляются комментарии. 
        Чтобы исполнить только этот шаг, нужно передать компилятору опцию -E:

            g++ -E stages.cpp > preprocessed.cpp



    
    2)  Компиляция - каждый файл исходного кода (файл расширения .cpp) транслируется в код на языке ассемблера. 
        Чтобы исполнить только этапы препроцессинга и компиляции, нужно передать компилятору опцию -S:

            g++ -S stages.cpp



    3)  Ассемблирование - каждый файл на языке ассемблера транслируется в машинный код. В результате создаётся объектный файл с расширением .o. 
        Чтобы исполнить процесс до этой стадии включительно нужно передать компилятору опцию -c:

            g++ -c stages.cpp

        Изучить содержимое объектного файла можно либо с помощью xxd:

            xxd stages.o

        Или с помощью специальной утилиты objdump:

            objdump -d stages.o



    4)  Линковка - Все объектные файлы сливаются друг с другом, а также с другими библиотеками.  Даже если ваш проект состоит из одного файла, 
        вы наверняка используйте как минимум стандартную библиотеку и на этом этапе ваш код соединяется с другими библиотеками

            g++ stages.o




    Задача:

        Пройдите поэтапно все стадии сборки с этой программой.
*/



#include <iostream>
using std::cout, std::endl;

int main()
{
    for (int i = 0; i < 100; i += 7)
        cout << i << endl;
}